stages:
  - test-repo
  - build
  - package
  - deploy

variables:
  IMAGE_TAG: trueShuffle$CI_COMMIT_SHORT_SHA
  DOCKER_USERNAME: $DOCKER_USERNAME
  DOCKER_PASSWORD: $DOCKER_PASSWORD
  IMAGE_NAME: "backend"

Test Repository:
  image: node:21-alpine3.18
  stage: test-repo
  script:
    - npm test
  only:
    - main

Build:
  image: node:21-alpine3.18
  stage: build
  before_script:
    - npm cache clean --force
    - npm ci
  script:
    - npm run build 
  artifacts:
    paths:
      - dist/
  only:
    - main

Package:
  image: docker:24.0.9
  stage: package
  variables:
    DOCKER_HOST: "tcp://docker:2375"
    DOCKER_TLS_CERTDIR: ""
  services:
    - docker:24.0.9-dind
  before_script:
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  script:
    - docker build -t $DOCKER_USERNAME/$IMAGE_NAME:$IMAGE_TAG .
    - docker push $DOCKER_USERNAME/$IMAGE_NAME:$IMAGE_TAG
  only:
    - main

Deploy:
  stage: deploy
  image: docker:24.0.9-dind
  variables:
    DOCKER_HOST: "tcp://docker:2375"
    DOCKER_TLS_CERTDIR: ""
  services:
    - docker:24.0.9-dind
  before_script:
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  script:
    - docker pull $DOCKER_USERNAME/$IMAGE_NAME:$IMAGE_TAG
    - docker stop backend || true
    - docker rm backend || true
    - docker run -d --name backend -p 3000:3000 $DOCKER_USERNAME/$IMAGE_NAME:$IMAGE_TAG
    - sleep 10
    - docker logs backend
    - sleep 10
    - docker exec backend curl http://localhost:3000
  only:
    - main